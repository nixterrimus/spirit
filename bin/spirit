#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), *%w{ .. lib })

require 'commander/import'

require 'spirit'
require 'spirit_server'
require 'spirit_intent_listener'

program :name, 'spirit'
program :version, Spirit::VERSION
program :description, 'Spirit is your personal internet of things'

command 'api-server' do |c|
  c.syntax = 'spirit server [options]'
  c.description = 'Run the API Server'

  c.action do |args, options|
    server = SpiritHTTPServer
    server.set :spirit, Spirit
    server.run!
  end
end
command 'intent-listener' do |c|
  c.action do |args, options|
    spirit = Spirit
    listener = Spirit::IntentListener.new(spirit)
    listener.listen
  end
end
  end
end

# The future home of spirit related commands
# Spirit will be able to:
#   - launch a console into your system
#   - start the bus event listener
#   - start the spirit http server
# All of these sub-pieces communicate through saving data
# with the persistence store and reloading it frequently
#
# There may also be a Procfile which launched and monitored
#  which starts both the message bus listener and the web
#  server
